package Phili.GUI;

import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import Phili.MainEngine.Product;

/**
 * @author phili
 *
 */


public final class PreOrdersUI extends javax.swing.JFrame {
    private javax.swing.JButton PreOrdersButtonConfirm;
    private javax.swing.JButton PreOrdersButtonDeny;
    private javax.swing.JButton PreOrdersButtonReturn;
    private javax.swing.JScrollPane PreOrdersScrollPane;
    private javax.swing.JTable PreOrdersTable;
    private javax.swing.JToolBar jToolBar1;
    
    
    public PreOrdersUI() {
        initComponents();
        
        LoginUI.uiLogic.Query(PreOrdersTable, MainUI.preOrdersList);
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        PreOrdersButtonConfirm = new javax.swing.JButton();
        PreOrdersButtonDeny = new javax.swing.JButton();
        PreOrdersButtonReturn = new javax.swing.JButton();
        PreOrdersScrollPane = new javax.swing.JScrollPane();
        PreOrdersTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pre-Orders");
        setMinimumSize(new java.awt.Dimension(300, 220));

        jToolBar1.setBackground(new java.awt.Color(204, 204, 204));
        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        PreOrdersButtonConfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/tick3.png"))); 
        PreOrdersButtonConfirm.setText("Confirm");
        PreOrdersButtonConfirm.setEnabled(false);
        PreOrdersButtonConfirm.setFocusable(false);
        PreOrdersButtonConfirm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PreOrdersButtonConfirm.setMaximumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonConfirm.setMinimumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonConfirm.setPreferredSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonConfirm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PreOrdersButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOrdersButtonConfirmActionPerformed(evt);
            }
        });
        jToolBar1.add(PreOrdersButtonConfirm);

        PreOrdersButtonDeny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/cross2.png")));
        PreOrdersButtonDeny.setText("Deny");
        PreOrdersButtonDeny.setEnabled(false);
        PreOrdersButtonDeny.setFocusable(false);
        PreOrdersButtonDeny.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PreOrdersButtonDeny.setMaximumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonDeny.setMinimumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonDeny.setPreferredSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonDeny.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PreOrdersButtonDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOrdersButtonDenyActionPerformed(evt);
            }
        });
        jToolBar1.add(PreOrdersButtonDeny);

        PreOrdersButtonReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/return2.png")));
        PreOrdersButtonReturn.setText("Return");
        PreOrdersButtonReturn.setFocusable(false);
        PreOrdersButtonReturn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PreOrdersButtonReturn.setMaximumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonReturn.setMinimumSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonReturn.setPreferredSize(new java.awt.Dimension(90, 60));
        PreOrdersButtonReturn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PreOrdersButtonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOrdersButtonReturnActionPerformed(evt);
            }
        });
        jToolBar1.add(PreOrdersButtonReturn);

        PreOrdersTable.setAutoCreateRowSorter(true);
        PreOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Descripton", "Price", "Category", "Order Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PreOrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PreOrdersTableMouseReleased(evt);
            }
        });
        PreOrdersTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PreOrdersTableKeyReleased(evt);
            }
        });
        PreOrdersScrollPane.setViewportView(PreOrdersTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PreOrdersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PreOrdersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }

    private void PreOrdersTableMouseReleased(java.awt.event.MouseEvent evt) {
        
        LoginUI.uiLogic.CheckTableSelectionValidity(PreOrdersTable, PreOrdersButtonConfirm, PreOrdersButtonDeny);
        
    }

    private void PreOrdersButtonConfirmActionPerformed(java.awt.event.ActionEvent evt) {
        
        int index = PreOrdersTable.getSelectedRow();
                
        //String name = PreOrdersTable.getValueAt(index, 0).toString();
        char [] name = LoginUI.uiLogic.AddUnderline(PreOrdersTable.getValueAt(index, 0).toString());
        char [] description = LoginUI.uiLogic.AddUnderline(PreOrdersTable.getValueAt(index, 1).toString());
        double price = Double.parseDouble(PreOrdersTable.getValueAt(index, 2).toString());
        int orderQuantity = Integer.parseInt(PreOrdersTable.getValueAt(index, 4).toString());
        char [] category = LoginUI.uiLogic.AddUnderline(PreOrdersTable.getValueAt(index, 3).toString());
        
        Product product = new Product(String.copyValueOf(name), String.copyValueOf(category), price, orderQuantity, String.copyValueOf(description));
       
        LoginUI.controller.PlaceCommand(product, PreOrdersTable.getSelectedRow());
        
        LoginUI.uiLogic.ClearCheckQuery(PreOrdersTable, PreOrdersButtonConfirm, PreOrdersButtonDeny, MainUI.preOrdersList);
    }

    private void PreOrdersButtonDenyActionPerformed(java.awt.event.ActionEvent evt) {
        
    }

    private void PreOrdersButtonReturnActionPerformed(java.awt.event.ActionEvent evt) {
        
        this.dispose();
    }

    private void PreOrdersTableKeyReleased(java.awt.event.KeyEvent evt) {
        
        LoginUI.uiLogic.CheckTableSelectionValidity(PreOrdersTable, PreOrdersButtonConfirm, PreOrdersButtonDeny);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

         try {
        UIManager.setLookAndFeel(
            UIManager.getCrossPlatformLookAndFeelClassName());
    } 
    catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
    }

        java.awt.EventQueue.invokeLater(() -> {
            new PreOrdersUI().setVisible(true);
         });
    }



}
