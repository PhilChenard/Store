package Phili.GUI;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import Phili.MainEngine.*;


/**
 * @author phili
 *
 */
public class ShoppingCartUI extends javax.swing.JFrame {

    public static List<Product> productsInCart = new ArrayList<>();
    
    private javax.swing.JToolBar sToolbar;
    private javax.swing.JButton scButtonDelete;
    private javax.swing.JButton scButtonForward;
    private javax.swing.JButton scButtonReturn;
    private javax.swing.JScrollPane scScrollPane;
    private javax.swing.JTable scTablePreOrders;
    
    public ShoppingCartUI() {
        initComponents();
        
        LoginUI.uiLogic.Query(scTablePreOrders, productsInCart);
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        sToolbar = new javax.swing.JToolBar();
        scButtonForward = new javax.swing.JButton();
        scButtonDelete = new javax.swing.JButton();
        scButtonReturn = new javax.swing.JButton();
        scScrollPane = new javax.swing.JScrollPane();
        scTablePreOrders = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shopping Cart");
        setMinimumSize(new java.awt.Dimension(300, 220));

        sToolbar.setBackground(new java.awt.Color(204, 204, 204));
        sToolbar.setFloatable(false);
        sToolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        sToolbar.setRollover(true);
        sToolbar.setMaximumSize(new java.awt.Dimension(143, 59));
        sToolbar.setMinimumSize(new java.awt.Dimension(143, 59));

        scButtonForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/right arrow.png"))); 
        scButtonForward.setText("Forward");
        scButtonForward.setEnabled(false);
        scButtonForward.setFocusable(false);
        scButtonForward.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scButtonForward.setMaximumSize(new java.awt.Dimension(90, 60));
        scButtonForward.setMinimumSize(new java.awt.Dimension(90, 60));
        scButtonForward.setPreferredSize(new java.awt.Dimension(90, 60));
        scButtonForward.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        scButtonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scButtonForwardActionPerformed(evt);
            }
        });
        sToolbar.add(scButtonForward);

        scButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/cross2.png"))); 
        scButtonDelete.setText("Delete");
        scButtonDelete.setEnabled(false);
        scButtonDelete.setFocusable(false);
        scButtonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scButtonDelete.setMaximumSize(new java.awt.Dimension(90, 60));
        scButtonDelete.setMinimumSize(new java.awt.Dimension(90, 60));
        scButtonDelete.setPreferredSize(new java.awt.Dimension(90, 60));
        scButtonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        scButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scButtonDeleteActionPerformed(evt);
            }
        });
        sToolbar.add(scButtonDelete);

        scButtonReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Phili/GUI/Images/return2.png"))); 
        scButtonReturn.setText("Return");
        scButtonReturn.setFocusable(false);
        scButtonReturn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scButtonReturn.setMaximumSize(new java.awt.Dimension(90, 60));
        scButtonReturn.setMinimumSize(new java.awt.Dimension(90, 60));
        scButtonReturn.setPreferredSize(new java.awt.Dimension(90, 60));
        scButtonReturn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        scButtonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scButtonReturnActionPerformed(evt);
            }
        });
        sToolbar.add(scButtonReturn);

        scTablePreOrders.setAutoCreateRowSorter(true);
        scTablePreOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Description", "Price", "Category", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scTablePreOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                scTablePreOrdersMouseReleased(evt);
            }
        });
        scTablePreOrders.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                scTablePreOrdersKeyReleased(evt);
            }
        });
        scScrollPane.setViewportView(scTablePreOrders);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }

    private void scTablePreOrdersMouseReleased(java.awt.event.MouseEvent evt) {
        
        LoginUI.uiLogic.CheckTableSelectionValidity(scTablePreOrders, scButtonForward, scButtonDelete);

    }


    private void scButtonReturnActionPerformed(java.awt.event.ActionEvent evt) {
        
        this.dispose();
    }

    private void scButtonForwardActionPerformed(java.awt.event.ActionEvent evt) {
        
        Product selectedItem = new Product();
        
        selectedItem = LoginUI.uiLogic.GetSelectedTableItem(scTablePreOrders);
        
        RemoveSelectedRow();
        
        LoginUI.controller.PlacePreCommand(selectedItem, selectedItem.getQuantity());

        LoginUI.uiLogic.ClearCheckQuery(scTablePreOrders, scButtonForward, scButtonDelete, productsInCart);
    }

    private void scButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        
        RemoveSelectedRow();
        
        LoginUI.uiLogic.ClearCheckQuery(scTablePreOrders, scButtonForward, scButtonDelete, productsInCart);
    }

    private void scTablePreOrdersKeyReleased(java.awt.event.KeyEvent evt) {
        
        LoginUI.uiLogic.CheckTableSelectionValidity(scTablePreOrders, scButtonForward, scButtonDelete);
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         try {
        UIManager.setLookAndFeel(
            UIManager.getCrossPlatformLookAndFeelClassName());
    } 
    catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
    }

        java.awt.EventQueue.invokeLater(() -> {
            new LoginUI().setVisible(true);
        });

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShoppingCartUI().setVisible(true);
            }
        });
    }


 
    public void RemoveSelectedRow()
    {   
        productsInCart.remove(scTablePreOrders.getSelectedRow());
    }
}
